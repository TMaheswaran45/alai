{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\n\nclass GoTop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onScrollStep\", () => {\n      if (window.pageYOffset === 0) {\n        clearInterval(this.state.intervalId);\n      }\n\n      window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n    });\n\n    _defineProperty(this, \"scrollToTop\", () => {\n      let intervalId = setInterval(this.onScrollStep, this.props.delayInMs);\n      this.setState({\n        intervalId: intervalId\n      });\n    });\n\n    _defineProperty(this, \"renderGoTopIcon\", () => {\n      if (this.state.thePosition) {\n        return __jsx(\"div\", {\n          className: \"go-top\",\n          onClick: this.scrollToTop\n        }, __jsx(Icon.ArrowUp, null));\n      }\n    });\n\n    this.state = {\n      intervalId: 0,\n      thePosition: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        this.setState({\n          thePosition: true\n        });\n      } else {\n        this.setState({\n          thePosition: false\n        });\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.renderGoTopIcon());\n  }\n\n}\n\nexport default GoTop;","map":{"version":3,"sources":["/Users/murali/Downloads/alai-website-static/default/alai-ws-mp/components/Layouts/GoTop.js"],"names":["React","Icon","GoTop","Component","constructor","props","window","pageYOffset","clearInterval","state","intervalId","scroll","scrollStepInPx","setInterval","onScrollStep","delayInMs","setState","thePosition","scrollToTop","componentDidMount","document","addEventListener","scrollY","scrollTo","render","renderGoTopIcon"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,0CAmBJ,MAAM;AACjB,UAAIC,MAAM,CAACC,WAAP,KAAuB,CAA3B,EAA6B;AACzBC,QAAAA,aAAa,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CAAb;AACH;;AACDJ,MAAAA,MAAM,CAACK,MAAP,CAAc,CAAd,EAAiBL,MAAM,CAACC,WAAP,GAAqB,KAAKF,KAAL,CAAWO,cAAjD;AACH,KAxBkB;;AAAA,yCA0BL,MAAM;AAChB,UAAIF,UAAU,GAAGG,WAAW,CAAC,KAAKC,YAAN,EAAoB,KAAKT,KAAL,CAAWU,SAA/B,CAA5B;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEA;AAAd,OAAd;AACH,KA7BkB;;AAAA,6CA+BD,MAAM;AACpB,UAAI,KAAKD,KAAL,CAAWQ,WAAf,EAA2B;AACvB,eACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,OAAO,EAAE,KAAKC;AAAtC,WACI,MAAC,IAAD,CAAM,OAAN,OADJ,CADJ;AAKH;AACJ,KAvCkB;;AAEf,SAAKT,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETO,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACtC,UAAIf,MAAM,CAACgB,OAAP,GAAiB,GAArB,EAA0B;AACtB,aAAKN,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH,OAFD,MAEO;AACH,aAAKD,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH;AACJ,KAND;AAOAX,IAAAA,MAAM,CAACiB,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;;AAwBDC,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,KAAD,CAAO,QAAP,QACK,KAAKC,eAAL,EADL,CADJ;AAKH;;AAhD+B;;AAmDpC,eAAevB,KAAf","sourcesContent":["import React from 'react'\r\nimport * as Icon from 'react-feather'\r\n\r\nclass GoTop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intervalId: 0,\r\n            thePosition: false\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 170) {\r\n                this.setState({ thePosition: true })\r\n            } else {\r\n                this.setState({ thePosition: false })\r\n            }\r\n        });\r\n        window.scrollTo(0, 0);\r\n    }\r\n    \r\n    onScrollStep = () => {\r\n        if (window.pageYOffset === 0){\r\n            clearInterval(this.state.intervalId);\r\n        }\r\n        window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\r\n    }\r\n\r\n    scrollToTop = () => {\r\n        let intervalId = setInterval(this.onScrollStep, this.props.delayInMs);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    renderGoTopIcon = () => {\r\n        if (this.state.thePosition){\r\n            return (\r\n                <div className=\"go-top\" onClick={this.scrollToTop}>\r\n                    <Icon.ArrowUp />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderGoTopIcon()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoTop;\r\n"]},"metadata":{},"sourceType":"module"}